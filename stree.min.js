/*! stree 0.0.1 // 08.05.2014 // Vladimir Neverov <sanguini@gmail.com> //  */
!function(){function STree(a){this.settings=a}function prefixLength(a){var b=/^(\s*)/,c=b.exec(a);return c?c[0].length:0}function parseSTreeLine(a){var b,c,d=/^(\s*):(.+)/,e=/^(\s*)([^:\s][^\s]*)\s+(\S*)([^:\n]+)(:.+)/i,f=/^(\s*)([^:\s][^\s]*)\s+(\S*)([^:\n]+)/i,g=/^(\s*)else\s*(:.+)/i,h=/^(\s*)else\s*/i,i={};if(c=d.exec(a))i.type=1,i.prefix=c[1].length,c[2].indexOf("=")>0?(b=c[2].split("="),i.resname=b[0].trim(),i.resval=b.slice(1).join("=").trim()):i.resval=c[2].trim();else if(c=g.exec(a))i=parseSTreeLine(c[2]),i.type=2,i.prefix=c[1].length,i.else=!0;else if(c=h.exec(a))i.type=2,i.prefix=c[1].length,i.else=!0;else if(c=e.exec(a))i=parseSTreeLine(c[5]),i.type=0,i.prefix=c[1].length,i.varname=c[2].trim(),i.op=c[3].trim(),i.varval=c[4].trim();else{if(!(c=f.exec(a)))throw new Error("Failed to parse line: '"+a+"'");i.type=0,i.prefix=c[1].length,i.varname=c[2].trim(),i.op=c[3].trim(),i.varval=c[4].trim()}return i}function parseSTree(a){var b,c,d,e=a.split("\n").filter(function(a){return/\S/.test(a)&&!/^\s*#/.test(a)}),f={},g={},h=[];for(b=0;b<e.length;b++)(c=/^\s*\[([^\]]+)\]\s*$/.exec(e[b]))?(d&&h.length&&(f[d]=h,h=[]),d=c[1]):h.push(parseSTreeLine(e[b]));h.length&&(f[d]=h),d||(f["default"]=e.map(function(a){return parseSTreeLine(a)}));for(b in f)g[b]=processSTreeLines(f[b],f[b][0].prefix);return g}function processSTreeLines(a,b,c){var d,e,f,g,h,i=0,j=a.length,k=[],l={apply:[],children:[]},m="";for(c&&(i=c.i),d=0;b>d;d++)m+=" ";for(d=i;j>d;d++)if(f=a[d],f.prefix===b)f.varname&&(l.name&&k.push(l),l={name:f.varname,op:f.op,val:f.varval,apply:[],children:[]}),f.else&&(k.push(l),l={"else":!0,apply:[],children:[]}),f.resval&&l.apply.push({name:f.resname,val:f.resval});else{if(!(f.prefix>b))return(l.name||l.apply.length)&&(k.push(l),l={}),c&&(c.i=d-1),k;for(h={i:d},g=processSTreeLines(a,f.prefix,h),d=h.i,e=0;e<g.length;e++)g[e].name?l.children.push(g[e]):g[e].apply&&g[e].apply.length&&(l.apply=l.apply.concat(g[e].apply))}return(l.name||l.apply.length)&&k.push(l),c&&(c.i=d),k}var fs=require("fs");STree.prototype.readFrom=function(a){var b=fs.readFileSync(a,"utf-8");if(!b)throw new Error("Couldn't read file "+a);return this.load(b),this},STree.prototype.load=function(a){return this.trees=parseSTree(a),this},STree.prototype.getTrees=function(){return this.trees?Object.keys(this.trees):[]},STree.prototype.value=function(a,b,c){return Array.prototype.slice.call(arguments).length&&this.apply(a,b,c),this.retval},STree.prototype.object=function(a,b,c){return Array.prototype.slice.call(arguments).length&&this.apply(a,b,c),this.retobj},STree.prototype.apply=function(a,b,c){var d,e;if(a&&a.constructor===Object&&(c=b,b=a,a=void 0),d=b,"undefined"!=typeof d){if(!this.trees)throw new Error("Couldn't apply stree without a tree");if(a&&this.trees[a])e=this.trees[a];else{if(!this.trees["default"])throw new Error(a?"Couldn't find tree '"+a+'"':"Either no default tree exists and no tree name specified");e=this.trees["default"]}return c&&(d=JSON.parse(JSON.stringify(b))),this.retobj={},this.retval=void 0,this.evaluate(d,e),Object.keys(this.retobj).length&&"undefined"==typeof this.retval?this.retobj:this}},STree.prototype.evaluate=function(a,b){var c,d,e,f=!1;for(c=0;c<b.length;c++){if(f=!1,d=b[c],d.else){this.applyRule(a,d);break}if(e=this.resolve(d.name,a),"undefined"!=typeof e&&this.applyOperator(e,d.op,d.val)&&(f=!0),f){this.applyRule(a,d);break}}return this.retval},STree.prototype.applyRule=function(a,b){var c;if(b.apply&&b.apply.length)for(c=0;c<b.apply.length;c++)b.apply[c].name?this.retobj[b.apply[c].name]=b.apply[c].val:this.retval=b.apply[c].val;b.children&&b.children.length&&(this.retval=this.evaluate(a,b.children))},STree.prototype.applyOperator=function(a,op,b){if("="===op)return a==b;if("!="===op)return a!=b;if(">"===op)return a>b;if(">="===op)return a>=b;if("<"===op)return b>a;if("<="===op)return b>=a;if("contains"===op)return a.toString().indexOf(b)>=0;if("ncontains"===op)return a.toString().indexOf(b)<0;if("icontains"===op)return a.toString().toLowerCase().indexOf(b.toString().toLowerCase())>=0;if(["nicontains","incontains"].indexOf(op)>=0)return a.toString().toLowerCase().indexOf(b.toString().toLowerCase())<0;if("in"===op){var list=eval(b);return list.indexOf(a)>=0}if("nin"===op){var list=eval(b);return list.indexOf(a)<0}if("~"===op){var regex=eval(b);return regex.test(a)}throw new Error("Unknown operator '"+op+"'")},STree.prototype.resolve=function(a,b){if(a.indexOf(".")<=0)return b[a];var c,d,e,f=a.split("."),g=b,h=-1,i=!1;for(c in f){if(h=-1,d=f[c],(e=/(.+)\[([\-\d]+)\]/.exec(d))&&(h=parseInt(e[2],10),d=e[1],i=!0),"undefined"==typeof g[d])return;if(g=g[d],i&&g&&g.constructor===Array)if(h>=0)g.length>h&&(g=g[h]);else{if(!(0>h))return;g.length>-h&&(g=g[g.length+h])}i=!1}return g};try{window.STree=STree}catch(e){module.exports=STree}}();